/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/databases_screen/DatabasesViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DatabasesViewBase::DatabasesViewBase() :
    buttonCallback(this, &DatabasesViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &DatabasesViewBase::radioButtonSelectedCallbackHandler),
    flexButtonCallback(this, &DatabasesViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, -40);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DATABASES_ID));
    image1.setAlpha(91);
    add(image1);

    nextButton.setBoxWithBorderPosition(0, 0, 46, 51);
    nextButton.setBorderSize(5);
    nextButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    nextButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_NAVIGATE_NEXT_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_NAVIGATE_NEXT_50_50_E8F6FB_SVG_ID));
    nextButton.setIconXY(0, 0);
    nextButton.setAction(flexButtonCallback);
    nextButton.setPosition(422, 111, 46, 51);
    add(nextButton);

    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    radioButton1.setXY(22, 159);
    radioButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton1.setSelected(false);
    radioButton1.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButton1);
    add(radioButton1);

    answer3.setPosition(298, 166, 154, 29);
    answer3.setColor(touchgfx::Color::getColorFromRGB(255, 250, 250));
    answer3.setLinespacing(0);
    answer3.setWildcard(touchgfx::TypedText(T___SINGLEUSE_ZRG4).getText());
    answer3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NAHM));
    add(answer3);

    submitButton.setXY(370, 217);
    submitButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID));
    submitButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_9515));
    submitButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    submitButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    submitButton.setAction(buttonCallback);
    add(submitButton);

    scoreTextArea.setXY(0, 19);
    scoreTextArea.setColor(touchgfx::Color::getColorFromRGB(252, 252, 252));
    scoreTextArea.setLinespacing(0);
    Unicode::snprintf(scoreTextAreaBuffer, SCORETEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V1ST).getText());
    scoreTextArea.setWildcard(scoreTextAreaBuffer);
    scoreTextArea.resizeToCurrentText();
    scoreTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L2AS));
    add(scoreTextArea);

    textArea1.setPosition(37, 43, 401, 68);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(252, 247, 247));
    textArea1.setLinespacing(0);
    textArea1.setWildcard(touchgfx::TypedText(T___SINGLEUSE_CD0T).getText());
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AY5F));
    add(textArea1);

    textArea2.setPosition(438, 12, 42, 36);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(250, 242, 242));
    textArea2.setLinespacing(0);
    textArea2.setWildcard(touchgfx::TypedText(T___SINGLEUSE_N5BF).getText());
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XM0V));
    add(textArea2);

    radioButton2.setXY(22, 213);
    radioButton2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton2.setSelected(false);
    radioButton2.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButton2);
    add(radioButton2);

    radioButton4.setXY(240, 213);
    radioButton4.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton4.setSelected(false);
    radioButton4.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButton4);
    add(radioButton4);

    radioButton3.setXY(240, 166);
    radioButton3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton3.setSelected(false);
    radioButton3.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButton3);
    add(radioButton3);

    answer1.setPosition(71, 166, 154, 29);
    answer1.setColor(touchgfx::Color::getColorFromRGB(255, 250, 250));
    answer1.setLinespacing(0);
    answer1.setWildcard(touchgfx::TypedText(T___SINGLEUSE_VDJM).getText());
    answer1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BJN));
    add(answer1);

    answer2.setPosition(71, 217, 154, 29);
    answer2.setColor(touchgfx::Color::getColorFromRGB(255, 250, 250));
    answer2.setLinespacing(0);
    answer2.setWildcard(touchgfx::TypedText(T___SINGLEUSE_TNET).getText());
    answer2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ALBN));
    add(answer2);

    answer4.setPosition(293, 217, 154, 29);
    answer4.setColor(touchgfx::Color::getColorFromRGB(255, 250, 250));
    answer4.setLinespacing(0);
    answer4.setWildcard(touchgfx::TypedText(T___SINGLEUSE_VTST).getText());
    answer4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XOUQ));
    add(answer4);
}

DatabasesViewBase::~DatabasesViewBase()
{

}

void DatabasesViewBase::setupScreen()
{

}

void DatabasesViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &submitButton)
    {
        //Interaction2
        //When submitButton clicked call virtual function
        //Call submitClicked
        submitClicked();
    }
}

void DatabasesViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButton1)
    {
        //Interaction3
        //When radioButton1 selected call virtual function
        //Call answerSelected1
        answerSelected1();
    }
    if (&src == &radioButton2)
    {
        //Interaction4
        //When radioButton2 selected call virtual function
        //Call answerSelected2
        answerSelected2();
    }
    if (&src == &radioButton3)
    {
        //Interaction5
        //When radioButton3 selected call virtual function
        //Call answerSelected3
        answerSelected3();
    }
    if (&src == &radioButton4)
    {
        //Interaction6
        //When radioButton4 selected call virtual function
        //Call answerSelected4
        answerSelected4();
    }
}

void DatabasesViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &nextButton)
    {
        //Interaction7
        //When nextButton clicked call virtual function
        //Call nextClicked
        nextClicked();
    }
}
