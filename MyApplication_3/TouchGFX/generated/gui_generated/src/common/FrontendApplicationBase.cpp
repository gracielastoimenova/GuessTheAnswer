/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/welcome_screen/WelcomeView.hpp>
#include <gui/welcome_screen/WelcomePresenter.hpp>
#include <gui/categories_screen/CategoriesView.hpp>
#include <gui/categories_screen/CategoriesPresenter.hpp>
#include <gui/algorithms_screen/AlgorithmsView.hpp>
#include <gui/algorithms_screen/AlgorithmsPresenter.hpp>
#include <gui/databases_screen/DatabasesView.hpp>
#include <gui/databases_screen/DatabasesPresenter.hpp>
#include <gui/embedded_screen/EmbeddedView.hpp>
#include <gui/embedded_screen/EmbeddedPresenter.hpp>
#include <gui/ai_screen/AIView.hpp>
#include <gui/ai_screen/AIPresenter.hpp>
#include <gui/score_screen/ScoreView.hpp>
#include <gui/score_screen/ScorePresenter.hpp>
#include <gui/rank_screen/RankView.hpp>
#include <gui/rank_screen/RankPresenter.hpp>
#include <gui/final_screen/FinalView.hpp>
#include <gui/final_screen/FinalPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
}

/*
 * Screen Transition Declarations
 */

// Welcome

void FrontendApplicationBase::gotoWelcomeScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoWelcomeScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoWelcomeScreenNoTransitionImpl()
{
    touchgfx::makeTransition<WelcomeView, WelcomePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoWelcomeScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoWelcomeScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoWelcomeScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<WelcomeView, WelcomePresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Categories

void FrontendApplicationBase::gotoCategoriesScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCategoriesScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCategoriesScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<CategoriesView, CategoriesPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Algorithms

void FrontendApplicationBase::gotoAlgorithmsScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoAlgorithmsScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoAlgorithmsScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<AlgorithmsView, AlgorithmsPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Databases

void FrontendApplicationBase::gotoDatabasesScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDatabasesScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDatabasesScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<DatabasesView, DatabasesPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Embedded

void FrontendApplicationBase::gotoEmbeddedScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEmbeddedScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoEmbeddedScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<EmbeddedView, EmbeddedPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// AI

void FrontendApplicationBase::gotoAIScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoAIScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoAIScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<AIView, AIPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Final

void FrontendApplicationBase::gotoFinalScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoFinalScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFinalScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<FinalView, FinalPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
